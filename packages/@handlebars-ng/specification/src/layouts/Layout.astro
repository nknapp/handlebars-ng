---
import { Sidebar } from "@/components/Sidebar";
import { SidebarButton } from "@/components/SidebarButton";
import SidebarItem from "@/components/SidebarItem.astro";

interface Props {
  title: string;
}

const specPages = await Astro.glob("../pages/spec/**/*.(mdx|md)");

const { title } = Astro.props;
---

<!DOCTYPE html>
<html lang="en" class="h-full">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, minimum-scale=1" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body class="pt-12 ">
    <div class="max-w-5xl mx-auto lg:shadow-xl">
      <div
        class="max-w-5xl mx-auto fixed top-0 w-full bg-amber-100 text-lg font-bold"
      >
        <div class="flex space-between items-center h-12 px-4">
          <SidebarButton client:load />
          <div class="w-2"></div>
          <a href="/">
            <img src="/favicon.svg" class="h-8 mr-2 inline"> The Handlebars Language
          </a>
          
        </div>
      </div>
      <div class="fixed top-0 pt-12 w-0 h-full overflow-visible">
        <Sidebar client:load>
          <ul class="sticky top-1">
            {
              specPages.map((page) => {
                return (
                  <li class="p-1">
                    <SidebarItem
                      href={page.url}
                      text={page.frontmatter.title as string}
                    />
                  </li>
                );
              })
            }
          </ul>
        </Sidebar>
      </div>
      <div class="lg:ml-64">
        <div class="content p-4">
          <div class="font-bold bg-red-100 text-red-900 p-2">
            This project is in an early work-in-progress stage.
            <a href="https://github.com/nknapp/handlebars-ng">Contribute</a>
          </div>
          <slot />
        </div>
      </div>
    </div>
  </body>
</html>
<style is:global>
  html {
    font-family: system-ui, sans-serif;
    background-color: #f6f6f6;
  }
  code {
    font-family: Menlo, Monaco, Lucida Console, Liberation Mono,
      DejaVu Sans Mono, Bitstream Vera Sans Mono, Courier New, monospace;
  }

  .content h1 {
    @apply text-amber-900 text-3xl font-bold mt-10 mb-10;
  }

  .content h2 {
    @apply text-amber-900 text-2xl font-bold mt-5 mb-5;
  }

  .content h3 {
    @apply text-amber-900 text-xl font-bold mt-3 mb-3;
  }

  .content h4 {
    @apply text-amber-900 text-xl mt-2 mb-2;
  }

  .content h5 {
    @apply text-amber-900 text-lg mt-1 mb-1;
  }

  .content h1:first-child,
  .content h2:first-child,
  .content h3:first-child,
  .content h4:first-child,
  .content h5:first-child {
    @apply mt-0;
  }

  .content ul {
    @apply list-disc list-inside mt-2 mb-2 ml-4;
  }

  .content .astro-code {
    @apply p-1;
  }

  /* Inspired by https://sylvaindurand.org/using-css-to-add-line-numbering/ */
  .content .astro-code code {
    counter-reset: line;
  }

  .content .astro-code .line {
    counter-increment: line;
    overflow: visible;
    display: inline-block;
  }

  .content .astro-code .line:before {
    content: counter(line);
    user-select: none;
    @apply text-slate-500 mr-2;
  }

  .content .astro-code .line:nth-child(2n) {
    @apply bg-slate-900;
  }

  .content .astro-code .line:hover {
    @apply bg-slate-700;
  }

  .content .invisible-chars .astro-code .line:not(:last-child):after {
    content: "‚èé";
    @apply text-slate-300;
  }

  .content .invisible-chars .astro-code .line:last-child:after {
    content: " ";
  }

  .content a {
    @apply underline underline-offset-4;
  }

  .content a:hover {
    background-color: rgba(127, 127, 127, 0.1);
    outline: 5px solid rgba(127, 127, 127, 0.1);
  }
</style>
