{
  "$ref": "#/definitions/HandlebarsTest",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "BooleanLiteral": {
      "additionalProperties": false,
      "properties": {
        "loc": {
          "$ref": "#/definitions/SourceLocation"
        },
        "original": {
          "type": "string"
        },
        "type": {
          "const": "BooleanLiteral",
          "type": "string"
        },
        "value": {
          "type": "boolean"
        }
      },
      "required": ["loc", "original", "type", "value"],
      "type": "object"
    },
    "CommentStatement": {
      "additionalProperties": false,
      "properties": {
        "loc": {
          "$ref": "#/definitions/SourceLocation"
        },
        "strip": {
          "$ref": "#/definitions/StripFlags"
        },
        "type": {
          "const": "CommentStatement",
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "required": ["loc", "strip", "type", "value"],
      "type": "object"
    },
    "ContentStatement": {
      "additionalProperties": false,
      "properties": {
        "loc": {
          "$ref": "#/definitions/SourceLocation"
        },
        "original": {
          "type": "string"
        },
        "type": {
          "const": "ContentStatement",
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "required": ["loc", "original", "type", "value"],
      "type": "object"
    },
    "ExpectedParseError": {
      "additionalProperties": false,
      "properties": {
        "column": {
          "type": "number"
        },
        "line": {
          "type": "number"
        },
        "message": {
          "type": "string"
        }
      },
      "required": ["line", "column", "message"],
      "type": "object"
    },
    "Expression": {
      "anyOf": [
        {
          "$ref": "#/definitions/PathExpression"
        },
        {
          "$ref": "#/definitions/Literal"
        }
      ]
    },
    "HandlebarsTest": {
      "anyOf": [
        {
          "$ref": "#/definitions/ParseErrorTest"
        },
        {
          "$ref": "#/definitions/RuntimeErrorTest"
        },
        {
          "$ref": "#/definitions/SuccessTest"
        }
      ]
    },
    "Helper": {
      "enum": [
        "return_literal_a",
        "concat_strings",
        "identity",
        "add",
        "if_then_else"
      ],
      "type": "string"
    },
    "Literal": {
      "anyOf": [
        {
          "$ref": "#/definitions/StringLiteral"
        },
        {
          "$ref": "#/definitions/NumberLiteral"
        },
        {
          "$ref": "#/definitions/BooleanLiteral"
        }
      ]
    },
    "MustacheStatement": {
      "additionalProperties": false,
      "properties": {
        "escaped": {
          "type": "boolean"
        },
        "loc": {
          "$ref": "#/definitions/SourceLocation"
        },
        "params": {
          "items": {
            "$ref": "#/definitions/Expression"
          },
          "type": "array"
        },
        "path": {
          "$ref": "#/definitions/PathExpression"
        },
        "strip": {
          "$ref": "#/definitions/StripFlags"
        },
        "type": {
          "const": "MustacheStatement",
          "type": "string"
        }
      },
      "required": ["escaped", "loc", "params", "path", "strip", "type"],
      "type": "object"
    },
    "NumberLiteral": {
      "additionalProperties": false,
      "properties": {
        "loc": {
          "$ref": "#/definitions/SourceLocation"
        },
        "original": {
          "type": "string"
        },
        "type": {
          "const": "NumberLiteral",
          "type": "string"
        },
        "value": {
          "type": "number"
        }
      },
      "required": ["loc", "original", "type", "value"],
      "type": "object"
    },
    "ParseErrorTest": {
      "additionalProperties": false,
      "properties": {
        "$schema": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "expected": {
          "$ref": "#/definitions/ExpectedParseError"
        },
        "originalMessage": {
          "description": "The parse error that is returned by Handlebars 4.x, if different from expetation",
          "type": "string"
        },
        "possibleBug": {
          "description": "If the output of Handlebars.js seems to be wrong, a description of this should be in this field. That way, we can discuss the issues later. For now we should try to remain backwards compatible, so the \"output\" field should be what Handlebars 4.x is creating.",
          "type": "string"
        },
        "template": {
          "type": "string"
        },
        "type": {
          "const": "parseError",
          "type": "string"
        }
      },
      "required": ["$schema", "description", "expected", "template", "type"],
      "type": "object"
    },
    "PathExpression": {
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "boolean"
        },
        "depth": {
          "type": "number"
        },
        "loc": {
          "$ref": "#/definitions/SourceLocation"
        },
        "original": {
          "type": "string"
        },
        "parts": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "type": {
          "const": "PathExpression",
          "type": "string"
        }
      },
      "required": ["data", "depth", "loc", "original", "parts", "type"],
      "type": "object"
    },
    "Position": {
      "additionalProperties": false,
      "properties": {
        "column": {
          "type": "number"
        },
        "line": {
          "type": "number"
        }
      },
      "required": ["line", "column"],
      "type": "object"
    },
    "Program": {
      "additionalProperties": false,
      "properties": {
        "blockParams": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "body": {
          "items": {
            "$ref": "#/definitions/Statement"
          },
          "type": "array"
        },
        "loc": {
          "$ref": "#/definitions/SourceLocation"
        },
        "strip": {
          "additionalProperties": {
            "not": {}
          },
          "type": "object"
        },
        "type": {
          "const": "Program",
          "type": "string"
        }
      },
      "required": ["body", "loc", "strip", "type"],
      "type": "object"
    },
    "RuntimeErrorTest": {
      "additionalProperties": false,
      "properties": {
        "$schema": {
          "type": "string"
        },
        "ast": {
          "$ref": "#/definitions/Program"
        },
        "description": {
          "type": "string"
        },
        "expectedErrorMessage": {
          "type": "string"
        },
        "helpers": {
          "additionalProperties": {
            "$ref": "#/definitions/Helper"
          },
          "type": "object"
        },
        "input": {
          "additionalProperties": {},
          "type": "object"
        },
        "originalAst": {
          "description": "The AST created by the original Handlebars parser, in case it is different from \"ast\""
        },
        "originalParseError": {
          "const": true,
          "description": "The original Handlebars parser cannot parse the template in this test",
          "type": "boolean"
        },
        "possibleBug": {
          "description": "If the output of Handlebars.js seems to be wrong, a description of this should be in this field. That way, we can discuss the issues later. For now we should try to remain backwards compatible, so the \"output\" field should be what Handlebars 4.x is creating.",
          "type": "string"
        },
        "template": {
          "type": "string"
        },
        "type": {
          "const": "runtimeError",
          "type": "string"
        }
      },
      "required": [
        "$schema",
        "ast",
        "description",
        "expectedErrorMessage",
        "input",
        "template",
        "type"
      ],
      "type": "object"
    },
    "SourceLocation": {
      "additionalProperties": false,
      "properties": {
        "end": {
          "$ref": "#/definitions/Position"
        },
        "source": {
          "type": "string"
        },
        "start": {
          "$ref": "#/definitions/Position"
        }
      },
      "required": ["start", "end"],
      "type": "object"
    },
    "Statement": {
      "anyOf": [
        {
          "$ref": "#/definitions/ContentStatement"
        },
        {
          "$ref": "#/definitions/MustacheStatement"
        },
        {
          "$ref": "#/definitions/CommentStatement"
        }
      ]
    },
    "StringLiteral": {
      "additionalProperties": false,
      "properties": {
        "loc": {
          "$ref": "#/definitions/SourceLocation"
        },
        "original": {
          "type": "string"
        },
        "type": {
          "const": "StringLiteral",
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "required": ["loc", "original", "type", "value"],
      "type": "object"
    },
    "StripFlags": {
      "additionalProperties": false,
      "properties": {
        "close": {
          "type": "boolean"
        },
        "open": {
          "type": "boolean"
        }
      },
      "required": ["open", "close"],
      "type": "object"
    },
    "SuccessTest": {
      "additionalProperties": false,
      "properties": {
        "$schema": {
          "type": "string"
        },
        "ast": {
          "$ref": "#/definitions/Program"
        },
        "description": {
          "type": "string"
        },
        "helpers": {
          "additionalProperties": {
            "$ref": "#/definitions/Helper"
          },
          "type": "object"
        },
        "input": {
          "additionalProperties": {},
          "type": "object"
        },
        "originalAst": {
          "description": "The AST created by the original Handlebars parser, in case it is different from \"ast\""
        },
        "originalParseError": {
          "const": true,
          "description": "The original Handlebars parser cannot parse the template in this test",
          "type": "boolean"
        },
        "output": {
          "type": "string"
        },
        "possibleBug": {
          "description": "If the output of Handlebars.js seems to be wrong, a description of this should be in this field. That way, we can discuss the issues later. For now we should try to remain backwards compatible, so the \"output\" field should be what Handlebars 4.x is creating.",
          "type": "string"
        },
        "template": {
          "type": "string"
        },
        "type": {
          "const": "success",
          "type": "string"
        }
      },
      "required": [
        "$schema",
        "ast",
        "description",
        "input",
        "output",
        "template",
        "type"
      ],
      "type": "object"
    }
  }
}
