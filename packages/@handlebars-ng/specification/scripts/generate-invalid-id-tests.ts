import { resolveSpecFile } from "./lib/specPath";
import { writeTestcase } from "./lib/writeTestcase";
import fs from "node:fs/promises";
import path from "path";
import { addResultToFile } from "./lib/addResultToFile";
import { HandlebarsTest } from "types/tests";

const folder = "06-path-expression/invalid-ids";
const me = path.relative(process.cwd(), __filename);

const invalidChars =
  `! " # % & ' ( ) * + , ; < = > @ [ \\ ] ^ \` { | } ~`.split(" ");

for (const char of invalidChars) {
  const charCode = char.charCodeAt(0);
  const filename = `${folder}/char-code-${charCode}.hb-spec.json`;
  const resolvedFile = resolveSpecFile(filename);
  await writeTestcase(resolvedFile, {
    $schema: "../../schema/testcase.json",
    type: "parseError",
    description: `${char} may not be used in an id`,
    template: `{{a${char}b}}`,
  } as HandlebarsTest);
  await addResultToFile(resolvedFile);
}

await fs.writeFile(
  resolveSpecFile(`${folder}/README.txt`),
  `WARNING: The files in this folder where GENERATED by "${me}"`
);
