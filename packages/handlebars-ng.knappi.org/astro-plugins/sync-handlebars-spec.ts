import { AstroIntegration } from "astro";

import path from "path";
import { SyncDirs, SyncedFile } from "./lib/SyncDirs";

const __filename = new URL(import.meta.url).pathname;

const specSourceDir = path.resolve("../@handlebars-ng/specification/src/spec");
const specTargetDir = path.resolve("src/pages/spec");

export function hbsSpec(): AstroIntegration {
  return {
    name: "handlebars-spec",
    hooks: {
      "astro:config:setup": async ({ isRestart, command }) => {
        if (isRestart) return;

        if (command === "dev" || command === "build") {
          const syncDirs = new SyncDirs(
            specSourceDir,
            specTargetDir,
            async (file: SyncedFile) => {
              if (file.relativePath.endsWith("md")) {
                return {
                  relativePath: file.relativePath + "x",
                  contents: addFrontMatter(file),
                };
              }
              return file;
            }
          );
          await syncDirs.syncAllFilesFromSpec();

          if (command === "dev") {
            syncDirs.watch();
          }
        }
      },
    },
  };
}

function addFrontMatter({ relativePath, contents }: SyncedFile) {
  const headerMatch = contents.match(/^# (.*)$/m);
  if (headerMatch == null) {
    throw new Error("No '#'-Header found in file " + relativePath);
  }

  const header = headerMatch[1];

  return `---

# DO NOT EDIT THIS FILE MANUALLY
# generated by "${path.relative(process.cwd(), __filename)}"
title: ${JSON.stringify(header)}
layout: "@/layouts/SpecLayout.astro"

---

${contents}
`;
}
